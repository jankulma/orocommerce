{% extends '@OroUI/actions/update.html.twig' %}
{% import '@OroDataGrid/macros.html.twig' as dataGrid %}
{% import '@OroUI/macros.html.twig' as UI %}

{% set entityId = entity.id %}
{% set parentCategoryId = entity.parentCategory ? entity.parentCategory.id : null %}

{% if entityId %}
    {% oro_title_set({params : {"%title%": entity.defaultTitle.string} }) %}
{% endif %}

{% set formAction = entityId ? path('oro_catalog_category_update', { 'id': entityId }) : path('oro_catalog_category_create', { 'id': parentCategoryId })  %}

{% block navButtons %}
    {% import '@OroUI/macros.html.twig' as UI %}

    {% if entityId %}
        {% if is_granted('oro_catalog_category_create') %}
            {{ UI.button({
                'path' : path('oro_catalog_category_create', { 'id': entityId }),
                'iCss': 'fa-folder',
                'aCss': 'btn-primary',
                'label': 'oro.ui.create_entity'|trans({'%entityName%': 'oro.catalog.subcategory.entity_label'|trans}),
                'title': 'oro.ui.create_entity'|trans({'%entityName%': 'oro.catalog.subcategory.entity_label'|trans})
            }) }}
        {% endif %}
        {% placeholder update_navButtons with {entity: entity} %}
    {% endif %}

    {{ UI.cancelButton(path('oro_catalog_category_index')) }}
    {% set html = UI.saveAndStayButton({
        'route' : 'oro_catalog_category_update',
        'params': {'id': '$id'}
    }) %}
    {{ UI.dropdownSaveButton({'html': html}) }}
{% endblock navButtons %}

{% block pageHeader %}
    {% if entityId %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('oro_catalog_category_index'),
            'indexLabel': 'oro.catalog.category.entity_plural_label'|trans,
            'entityTitle': entity.defaultTitle.string|default('N/A'|trans)
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.catalog.category.entity_label'|trans}) %}
        {% include '@OroUI/page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% block content_data %}
    {% import '@OroUI/macros.html.twig' as UI %}

    {% set id = 'category-edit' %}

    {% set dataBlocks = [{
        'title': 'oro.catalog.sections.general'|trans,
        'class': 'active',
        'subblocks': [{
            'title': '',
            'data': [
                form_widget(form.sortOrder, {'id': 'categorySortOrder'}),
                form_widget(form.appendProducts, {'id': 'categoryAppendProducts'}),
                form_widget(form.removeProducts, {'id': 'categoryRemoveProducts'}),
                form_row(form.titles),
                form_row(form.slugPrototypesWithRedirect),
                form_row(form.smallImage),
                form_row(form.largeImage)
            ]
        }]
    }, {
        'title': 'oro.catalog.category.short_descriptions.label'|trans,
        'subblocks': [{
            'title': '',
            'data': [form_widget(form.shortDescriptions)],
        }]
    }, {
        'title': 'oro.catalog.category.long_descriptions.label'|trans,
        'subblocks': [{
            'title': '',
            'data': [form_widget(form.longDescriptions)],
        }]
    }] %}

    {% set dataBlocks = dataBlocks|merge(oro_form_additional_data(form, 'oro.catalog.sections.additional'|trans)) %}

    {% if is_granted('oro_product_update') %}
        {% set categoryId = entityId ? entityId : 0 %}
        {% if categoryId %}
            {% set categoryTitle = entity.defaultTitle.string|default('N/A'|trans) %}
            {% set sortProductsAction = {
                launcherOptions: {
                    ariaLabel: 'oro.catalog.product.grid.action.sort_products.aria_label'|trans({'{{ category }}': categoryTitle}),
                },
                frontend_options: {
                    title: 'oro.catalog.product.sort_products.dialog.title'|trans({'{{ category }}': categoryTitle}),
                },
                entityId: categoryId
            } %}
        {% endif %}

        {% set categoryProductsGrid %}
            <div data-ignore-form-state-change>
                {{ dataGrid.renderGrid('category-products-grid', {
                    category_id: categoryId
                }, {
                    cssClass: 'inner-grid',
                    jsmodules: ['oroproduct/js/datagrid/builder/sort-products-action-builder'],
                    gridBuildersOptions: {
                        sortProductsAction: {
                            inputAction: {
                                route: 'oro_catalog_category_update',
                                params: {id: '$id'},
                                (constant('Oro\\Bundle\\CatalogBundle\\EventListener\\SortOrderDialogTargetFormHandlerEventListener::SORT_ORDER_DIALOG_TARGET')): form.vars.full_name
                            }|json_encode,
                            autoExecute: triggerSortOrderDialog|default(''),
                            warnings: {
                                limit_warning: 'oro.catalog.product.sort_products.dialog.limit_warning'
                            },
                            route: 'oro_catalog_category_products_manage_sort_order_widget',
                            route_parameters: {
                                id: categoryId,
                                params: {category_id: categoryId}
                            }
                        }|merge(sortProductsAction|default({}))
                    }
                }) }}
            </div>
        {% endset %}

        {% set dataBlocks = dataBlocks|merge([{
            'title' : 'oro.product.entity_plural_label'|trans,
            'subblocks':
            [
                {
                    'title' : null,
                    'useSpan': false,
                    'data' : [categoryProductsGrid]
                }
            ]
        }]) %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge([{
        'title': 'oro.catalog.sections.default_options'|trans,
        'subblocks': [{
            'title': '',
            'useSpan': false,
            'data' : [form_widget(form.defaultProductOptions)]
        }]
    }] ) %}

    {% set data = {
        'formErrors': form_errors(form),
        'dataBlocks': dataBlocks
    }%}

    {% set treeOptions = {
        'view' : 'orocatalog/js/app/views/tree-manage-view',
        'key' : 'commerce-category',
        'data' : oro_category_list(null, rootCategory),
        'nodeId' : entityId ? entityId : parentCategoryId,
        'updateAllowed' : is_granted('oro_catalog_category_update'),
        'onSelectRoute' : 'oro_catalog_category_update',
        'onMoveRoute' : 'oro_catalog_category_move'
    } %}

    {% set twoColumnContent = parent() %}

    <div class="sidebar-container">
        {% embed "@OroUI/content_sidebar.html.twig" with {options: {
            fixSidebarHeight: false
        }} %}
            {% block sidebar %}
                {% import '@OroUI/macros.html.twig' as UI %}
                {{ UI.renderJsTree(
                    {
                        'label': 'oro.catalog.category.entity_plural_label'|trans,
                        'treeOptions': treeOptions
                    },
                    {
                        'move': {
                            'routeName': 'oro_catalog_category_move_form'
                        }
                    }
                ) }}
            {% endblock sidebar %}

            {% block content %}
                {% autoescape %}
                    <div class="category-data">
                        {{ twoColumnContent|raw}}
                    </div>
                {% endautoescape %}
            {% endblock content %}
        {% endembed %}
    </div>

{% endblock content_data %}

{% block __oro_product_price_table__product_price_table_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' product-prices'
    }) %}

    {% if not is_price_hidden(product, matrixFormType|default('') == 'none') %}
        {# Use to modify quantity in case when it not enough quantity to show the price #}
        {# We use this component as single entry point for price extendability #}
        {% set attr = layout_attr_defaults(attr, {
            'data-page-component-module': 'oroui/js/app/components/view-component',
            '~data-page-component-options': {
                view: 'oropricing/js/app/views/list-item-product-prices-view',
                showValuePrice: false,
                showListedPrice: false,
                showHint: false,
                modelAttr: {
                    prices: productPrices,
                }
            },
        }) %}
    {% endif %}

    {% if productPrices is not empty %}
        <div {{ block('block_attributes') }}>
            <table class="product-prices__table">
                <thead class="product-prices__thead">
                <tr class="product-prices__tr">
                    <th class="product-prices__th text-uppercase" scope="col">{{ 'oro.pricing.frontend.product.quantity.short_label'|trans }}</th>{# qty #}
                    <th class="product-prices__th" scope="col">{{ 'oro.pricing.frontend.product.unit_price.long_label'|trans }}</th>{# Unit Price #}
                </tr>
                </thead>
                {{ block_widget(block) }}
            </table>
        </div>
    {% endif %}
{% endblock %}

{% block __oro_product_price_table__product_price_table_body_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' product-prices__tbody'
    }) %}

    {% if productPrices is not empty %}
        {% set attr = layout_attr_defaults(attr, {
            'itemprop': 'offers',
            'itemscope': '',
            'itemtype':'http://schema.org/Offer'
        }) %}
    {% endif %}

    <tbody {{ block('block_attributes') }}>
    {% set currentUnit = '' %}
    {% set priceFormatOptions = {
        attributes: {
            fraction_digits: oro_locale_number_attribute('max_fraction_digits', 'currency')
        }
    } %}
    {% for price in productPrices %}
        {% if price.formatted_unit is defined %}
            {% if currentUnit != price.formatted_unit %}
                {% set currentUnit = price.formatted_unit %}
                <tr class="product-prices__tr">
                    <td colspan="2" class="product-prices__td">
                        {% if loop.index > 1 %}<br/>{% endif %}
                        {% if isPriceUnitsVisible %}
                            <strong>{{ currentUnit|capitalize }}</strong>
                        {% endif %}
                    </td>
                </tr>
            {% endif %}
            <tr class="product-prices__tr" itemprop="priceSpecification" itemscope
                itemtype="http://schema.org/UnitPriceSpecification">
                <td class="product-prices__td" itemprop="eligibleQuantity" itemscope
                    itemtype="http://schema.org/QuantitativeValue">
                    <span itemprop="value" content="{{ price.quantity }}">{{ price.quantity }}</span>
                    <span class="hidden" aria-hidden="true" itemprop="unitCode">{{ currentUnit }}</span>
                </td>
                <td class="product-prices__td">
                    <span class="hidden" aria-hidden="true" itemprop="priceCurrency">{{ price.currency }}</span>
                    <span class="hidden" aria-hidden="true" itemprop="price">{{ price.price|number_format(priceFormatOptions.attributes.fraction_digits, '.', '') }}</span>
                    {{- price.formatted_price -}}
                </td>
            </tr>
        {% endif %}
    {% endfor %}
    </tbody>
{% endblock %}
